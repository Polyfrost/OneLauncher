//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "cluster_groups")]
#[onelauncher_macro::specta]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: u64,
	#[sea_orm(column_type = "Text")]
	pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::clusters::Entity")]
	Clusters,
}

impl Related<super::clusters::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Clusters.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
