//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "java_versions")]
#[serde(rename = "JavaModel")]
#[onelauncher_macro::specta]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: i64,
	pub major_version: u32,
	pub vendor_name: String,
	pub absolute_path: String,
	pub full_version: String,
	pub arch: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::setting_profiles::Entity")]
	SettingProfiles,
}

impl Related<super::setting_profiles::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::SettingProfiles.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
