//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "packages")]
#[onelauncher_macro::specta]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
	pub file_name: String,
	#[sea_orm(column_type = "Text")]
	pub display_name: String,
	#[sea_orm(column_type = "Text")]
	pub display_version: String,
	#[sea_orm(primary_key, auto_increment = false)]
	pub type_id: i32,
	pub provider_id: i32,
	#[sea_orm(column_type = "Text")]
	pub provider_version: String,
	#[sea_orm(column_type = "Text")]
	pub mc_versions: String,
	#[sea_orm(column_type = "Text")]
	pub mc_loader: String,
	#[sea_orm(column_type = "Text")]
	pub hash: String,
	#[sea_orm(column_type = "Text", nullable)]
	pub icon_url: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
